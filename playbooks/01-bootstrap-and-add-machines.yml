---
- name: Bootstrap Juju Controller and Add Machines
  hosts: "{{ groups['lxd_hosts'][0] }}"
  gather_facts: no

  tasks:
    - name: Check for existing juju controllers
      ansible.builtin.command: "/snap/bin/juju controllers"
      register: juju_controllers_result
      changed_when: false
      become: no
      # This task is expected to fail if no controller exists. We treat that as a success.
      failed_when: "juju_controllers_result.rc != 0 and 'No controllers registered' not in juju_controllers_result.stderr"

    - name: Bootstrap Juju controller with enhanced config
      ansible.builtin.command: >
        /snap/bin/juju bootstrap localhost {{ controller_name }}
        --config 'security.privileged=true'
        --config default-base=ubuntu@22.04
        --config bootstrap-base=ubuntu@22.04
        --model-default base=ubuntu@22.04
      register: bootstrap_result
      changed_when: true
      become: no
      ignore_errors: true
      retries: 3
      delay: 10

    - name: Wait for controller to be ready
      ansible.builtin.pause:
        seconds: 30
      when: bootstrap_result.changed

    - name: Verify controller is responsive
      ansible.builtin.command: "/snap/bin/juju version"
      register: juju_version
      retries: 5
      delay: 10
      until: juju_version.rc == 0
      become: no
      changed_when: false

    - name: Check if model already exists
      ansible.builtin.command: "/snap/bin/juju models"
      register: juju_models_result
      changed_when: false
      become: no

    - name: Add Juju model
      ansible.builtin.command: "/snap/bin/juju add-model {{ model_name }}"
      when: "model_name not in juju_models_result.stdout"
      changed_when: true
      become: no

    - name: Get list of current machines in the model
      ansible.builtin.command: "/snap/bin/juju machines -m {{ model_name }} --format=json"
      register: juju_machines_json
      changed_when: false
      become: no
      ignore_errors: true # Will fail if no machines exist, which is fine

    - name: Add machines to the Juju model
      ansible.builtin.command: "/snap/bin/juju add-machine -m {{ model_name }} ssh:{{ hostvars[item]['ansible_user'] | default('ubuntu') }}@{{ hostvars[item]['ansible_host'] }}"
      loop: "{{ groups['lxd_hosts'] }}"
      loop_control:
        loop_var: item
      when:
        - item != groups['lxd_hosts'][0]
        - hostvars[item]['ansible_host'] not in (juju_machines_json.stdout | from_json)['machines']
      changed_when: true
      become: no
