---
- name: Deploy Canonical Landscape Application (Sequential Strategy)
  hosts: all
  become: no # Juju commands run as the user
  gather_facts: no

  vars:
    overlay_path: "{{ playbook_dir }}/../landscape_overlay.yaml"
    cert_path: "/tmp/landscape_cert.pem"
    key_path: "/tmp/landscape_key.pem"
    cert_cn: "{{ domain_name | default('landscape.test.local') }}"

  tasks:
    - name: Generate a self-signed certificate and private key
      ansible.builtin.command:
        cmd: >
          openssl req -new -x509 -nodes -days 365
          -subj "/CN={{ cert_cn }}"
          -out "{{ cert_path }}"
          -keyout "{{ key_path }}"
      args:
        creates: "{{ cert_path }}"

    - name: Read and b64encode certificate
      ansible.builtin.set_fact:
        cert_content_b64: "{{ (lookup('file', cert_path) + '\n') | b64encode }}"

    - name: Read and b64encode private key
      ansible.builtin.set_fact:
        key_content_b64: "{{ lookup('file', key_path) | b64encode }}"

    - name: Create Juju overlay file for SSL
      ansible.builtin.copy:
        dest: "{{ overlay_path }}"
        content: |
          applications:
            haproxy:
              options:
                ssl_cert: {{ cert_content_b64 }}
                ssl_key: {{ key_content_b64 }}

    - name: Create Juju model idempotently
      ansible.builtin.command: "sg lxd -c '/snap/bin/juju add-model {{ model_name }}'"
      register: add_model_result
      changed_when: "'already exists' not in add_model_result.stderr"
      failed_when: "add_model_result.rc != 0 and 'already exists' not in add_model_result.stderr"

    - name: Deploy Landscape for Test Environment
      when: not (is_ha_cluster | bool)
      block:
        - name: Deploy landscape-scalable bundle without the overlay
          ansible.builtin.command: "sg lxd -c '/snap/bin/juju deploy -m {{ model_name }} landscape-scalable --channel=stable'"
          changed_when: true

        - name: Wait for haproxy application to be available
          ansible.builtin.command: "sg lxd -c '/snap/bin/juju wait-for application -m {{ model_name }} haproxy'"
          changed_when: false
          retries: 10
          delay: 15

        - name: Apply SSL configuration to HAProxy via juju config
          ansible.builtin.command:
            cmd: >
              sg lxd -c "/snap/bin/juju config -m {{ model_name }} haproxy
              ssl_cert='{{ cert_content_b64 }}'
              ssl_key='{{ key_content_b64 }}'"
          changed_when: true

    # --- BLOCK FOR HA (PRODUCTION) - Not refactored, will be skipped ---
    - name: Deploy for HA Cluster (Production Environment)
      ansible.builtin.command:
        cmd: "sg lxd -c '/snap/bin/juju deploy -m {{ model_name }} ./juju/bundle-base.yaml --overlay ./juju/overlay-ha.yaml --overlay {{ overlay_path }}'"
      args:
        chdir: /home/ubuntu/projetos/landscape-automation
      when: is_ha_cluster | bool
      register: juju_deploy_ha_result
      changed_when: "'Deploying' in juju_deploy_ha_result.stdout"