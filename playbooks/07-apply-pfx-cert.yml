---
- name: Convert and Apply PFX Certificate
  hosts: all
  connection: local
  gather_facts: no

  vars_files:
    - ../vars/main.yml
    - ../vars/secrets.yml

  tasks:
    - name: "Check if PFX file exists"
      ansible.builtin.stat:
        path: "../landscape.pfx"
      register: pfx_file_stat

    - name: "Fail if PFX file is not found"
      ansible.builtin.fail:
        msg: "ERRO: Arquivo '../landscape.pfx' não encontrado. Certifique-se de que ele está no diretório /home/s779929545/projetos/."
      when: not pfx_file_stat.stat.exists

    - name: "Extract private key from PFX"
      ansible.builtin.shell:
        cmd: >
          openssl pkcs12 -in ../landscape.pfx -nocerts -out /tmp/landscape.key -nodes
          -passin pass:'{{ pfx_password }}'
      changed_when: true

    - name: "Extract public certificate from PFX"
      ansible.builtin.shell:
        cmd: >
          openssl pkcs12 -in ../landscape.pfx -clcerts -nokeys -out /tmp/landscape.crt
          -passin pass:'{{ pfx_password }}'
      changed_when: true

    - name: "Read and b64encode certificate file"
      ansible.builtin.set_fact:
        cert_b64: "{{ lookup('file', '/tmp/landscape.crt') | b64encode }}"

    - name: "Read and b64encode private key file"
      ansible.builtin.set_fact:
        key_b64: "{{ lookup('file', '/tmp/landscape.key') | b64encode }}"

    - name: "Apply SSL configuration to HAProxy"
      ansible.builtin.command:
        cmd: >
          sg lxd -c "juju config -m {{ model_name }} haproxy
          ssl_cert='{{ cert_b64 }}'
          ssl_key='{{ key_b64 }}'"
      changed_when: true

    - name: "Clean up temporary files"
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/landscape.key
        - /tmp/landscape.crt
