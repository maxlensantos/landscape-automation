---
- name: "Bootstrap Juju Controller HA - Network Aware Strategy"
  hosts: "{{ groups['lxd_hosts'][0] }}"
  become: no
  gather_facts: yes

  vars:
    manual_cloud_name: "on-premise-manual"
    manual_cloud_endpoint: "{{ hostvars[groups['lxd_hosts'][0]]['ansible_host'] }}"
    bootstrap_timeout: 1200  # 20 minutos
    remote_user_home: "/home/{{ ansible_user }}"

  tasks:
    - name: "[CLEANUP] Unregister controller"
      ansible.builtin.command: "juju unregister ha-controller --no-prompt"
      failed_when: false

    - name: "[CLEANUP] Remove old cloud registration"
      ansible.builtin.command: "juju remove-cloud {{ manual_cloud_name }} --client"
      failed_when: false

    - name: "[CLEANUP] Pause for 3 seconds"
      ansible.builtin.pause:
        seconds: 3

    - name: "[PREP] Create manual-cloud.yaml configuration file"
      ansible.builtin.copy:
        dest: "/home/serpro/manual-cloud.yaml"
        content: |
          clouds:
            {{ manual_cloud_name }}:
              type: manual
              endpoint: {{ manual_cloud_endpoint }}
        mode: '0600'

    - name: "[CLOUD] Add manual cloud to Juju"
      ansible.builtin.command: "juju add-cloud {{ manual_cloud_name }} /home/serpro/manual-cloud.yaml --client"
      retries: 3
      delay: 10
      register: add_cloud_result
      until: add_cloud_result.rc == 0

    - name: "[BOOTSTRAP] Execute Juju bootstrap"
      ansible.builtin.command: >-
        juju bootstrap
        {{ manual_cloud_name }}
        {{ controller_name }}
        --constraints "mem=4G cores=2"
        --config enable-os-refresh-update=false
      register: bootstrap_result
      retries: 2
      delay: 30
      until: bootstrap_result.rc == 0

    - name: "[MODEL] Create Juju model for Landscape"
      ansible.builtin.command: "juju add-model {{ model_name }} -c {{ controller_name }}"
      register: model_result
      failed_when:
        - model_result.rc != 0
        - "'already exists' not in model_result.stderr"
      changed_when: "'already exists' not in model_result.stderr"

    - name: "[HA] Add second node to the controller"
      ansible.builtin.command: "juju add-machine ssh:{{ hostvars[groups['lxd_hosts'][1]]['ansible_host'] }} -m {{ controller_name }}:{{ model_name }}"
      when: (groups['lxd_hosts'] | length) > 1
      ignore_errors: yes

    - name: "[VALIDATE] Verify bootstrap and model are accessible"
      ansible.builtin.command: "juju status -m {{ controller_name }}:{{ model_name }}"
      retries: 5
      delay: 10
      register: status
      until: status.rc == 0
      changed_when: false